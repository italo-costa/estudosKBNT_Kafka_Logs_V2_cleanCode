version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-kbnt
    environment:
      POSTGRES_DB: virtualstock
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d virtualstock"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kbnt-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis-kbnt
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kbnt-network
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper-kbnt
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2182:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - kbnt-network
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka-kbnt
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "29093:29092"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - kbnt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5

  virtual-stock-service:
    build:
      context: ./microservices/virtual-stock-service
      dockerfile: Dockerfile
    container_name: virtual-stock-kbnt
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/virtualstock
      - SPRING_DATASOURCE_USERNAME=kbnt_user
      - SPRING_DATASOURCE_PASSWORD=kbnt_2024
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    ports:
      - "8084:8084"
    networks:
      - kbnt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./logs:/app/logs

networks:
  kbnt-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  zookeeper_data:
