# =============================================================================
# Docker Configuration - Virtual Stock Service
# =============================================================================

server:
  port: 8084
  servlet:
    context-path: /
  compression:
    enabled: true
  error:
    include-message: always
    include-binding-errors: always
  # Configurações de timeout e performance para Tomcat
  tomcat:
    connection-timeout: 60000  # 60 segundos
    keep-alive-timeout: 60000  # 60 segundos
    max-keep-alive-requests: 100
    threads:
      max: 200               # Máximo de threads
      min-spare: 10          # Mínimo de threads ativas
    accept-count: 100        # Conexões na fila
    max-connections: 8192    # Máximo de conexões simultâneas

spring:
  application:
    name: virtual-stock-service
    
  # PostgreSQL Database Configuration for Docker
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/virtualstock}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      # Configurações para evitar timeout
      validation-timeout: 5000
      initialization-fail-timeout: -1
      
  # JPA Configuration for PostgreSQL
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        # Desabilitar métricas que causam logs infinitos
        generate_statistics: false
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 0
        jdbc:
          batch_size: 20
        
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
      accept-empty-string-as-null-object: true
    default-property-inclusion: non_null
    
  # Configurações de task para melhor performance
  task:
    execution:
      pool:
        core-size: 8
        max-size: 16
        queue-capacity: 100
        keep-alive: 60s
    scheduling:
      pool:
        size: 4

# Logging Configuration
logging:
  level:
    com.kbnt.virtualstock: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
    org.hibernate: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
    org.hibernate.engine: WARN
    org.hibernate.internal: WARN
    org.springframework.orm.jpa: WARN
    com.zaxxer.hikari: WARN
    org.postgresql: WARN
    org.springframework.transaction: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{component:-VIRTUAL-STOCK}] [%X{owner:-Unknown}] [%X{messageId:-}] [%X{topic:-}] %logger{36} - %msg%n"

# Kafka Configuration
kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
    acks: all
    retries: 3
    retry-backoff-ms: 1000
  consumer:
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    group-id: virtual-stock-service-group
    auto-offset-reset: earliest

# Virtual Stock Specific Configuration
virtual-stock:
  kafka:
    topics:
      stock-updates: virtual-stock-updates
      high-priority-stock-updates: virtual-stock-high-priority-updates
    producer:
      retry-attempts: 3
      retry-backoff-ms: 1000
      
  business:
    low-stock-threshold: 10
    max-reservation-percentage: 80
    
  performance:
    async-processing: true
    batch-size: 100

# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,h2-console
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.9,0.95,0.99
  # Configurações adicionais de timeout
  server:
    port: 8084
  endpoint:
    health:
      cache:
        time-to-live: 10s
    
# OpenAPI Documentation
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
  packages-to-scan: com.kbnt.virtualstock.adapter.in.web
  paths-to-match: /api/**


