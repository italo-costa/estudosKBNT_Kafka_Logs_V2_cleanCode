version: '3.8'

services:
  # PostgreSQL Master
  postgres-master:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=kbnt_db
      - POSTGRES_USER=kbnt_user
      - POSTGRES_PASSWORD=kbnt_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - kbnt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kbnt_user -d kbnt_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Single Zookeeper
  zookeeper1:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper1-data:/var/lib/zookeeper/data
    networks:
      - kbnt-network

  # Single Kafka
  kafka1:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - kafka1-data:/var/lib/kafka/data
    networks:
      - kbnt-network

  # Elasticsearch
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - kbnt-network

volumes:
  postgres-data:
  zookeeper1-data:
  kafka1-data:
  elasticsearch-data:

networks:
  kbnt-network:
    driver: bridge
