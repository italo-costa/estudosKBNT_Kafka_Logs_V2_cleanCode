version: '3.8'

services:
  kbnt-stock-consumer-service:
    build: ../microservices/kbnt-stock-consumer-service
    container_name: kbnt-stock-consumer-service
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200

  kbnt-log-service:
    build: ../microservices/kbnt-log-service
    container_name: kbnt-log-service
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "8082:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200

  log-analytics-service:
    build: ../microservices/log-analytics-service
    container_name: log-analytics-service
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200

  log-consumer-service:
    build: ../microservices/log-consumer-service
    container_name: log-consumer-service
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200

  log-producer-service:
    build: ../microservices/log-producer-service
    container_name: log-producer-service
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200

  virtual-stock-service:
    build: ../microservices/virtual-stock-service
    container_name: virtual-stock-service
    depends_on:
      - kafka
      - elasticsearch
      - postgres
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=virtualstock
      - DB_USER=postgres
      - DB_PASSWORD=postgres

  api-gateway:
    build: ../microservices/api-gateway
    container_name: api-gateway
    depends_on:
      - kbnt-stock-consumer-service
      - kbnt-log-service
      - log-analytics-service
      - log-consumer-service
      - log-producer-service
      - virtual-stock-service
    ports:
      - "8090:8080"  # Changed to avoid conflict with kafka-ui
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.8.0
  #   container_name: logstash
  #   depends_on:
  #     - kafka
  #     - elasticsearch
  #   volumes:
  #     - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
  #   environment:
  #     - "LS_JAVA_OPTS=-Xmx256m -Xms256m"

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: virtualstock
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  elasticsearch-data:
  postgres-data:
