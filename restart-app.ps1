# Script de Restart da Aplica√ß√£o Virtual Stock Service
# Use este script se precisar reiniciar a aplica√ß√£o

Write-Host "=== Reiniciando Virtual Stock Service ===" -ForegroundColor Green

$containers = @("postgres-kbnt-stable", "virtual-stock-stable")

# Parar containers
Write-Host "Parando containers..." -ForegroundColor Yellow
foreach ($container in $containers) {
    Write-Host "Parando $container..." -ForegroundColor Cyan
    wsl -e bash -c "docker stop '$container'"
}

# Aguardar um pouco
Start-Sleep -Seconds 5

# Iniciar containers
Write-Host "Iniciando containers..." -ForegroundColor Yellow
foreach ($container in $containers) {
    Write-Host "Iniciando $container..." -ForegroundColor Cyan
    wsl -e bash -c "docker start '$container'"
}

# Aguardar inicializa√ß√£o
Write-Host "Aguardando aplica√ß√£o inicializar..." -ForegroundColor Yellow
Start-Sleep -Seconds 20

# Testar sa√∫de da aplica√ß√£o
Write-Host "Testando aplica√ß√£o..." -ForegroundColor Yellow
try {
    $response = wsl -e bash -c "curl -s -o /dev/null -w '%{http_code}' 'http://localhost:8084/actuator/health'"
    if ($response -eq "200") {
        Write-Host "‚úÖ Aplica√ß√£o reiniciada com sucesso!" -ForegroundColor Green
        Write-Host "üåê Acesse: http://localhost:8084" -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå Aplica√ß√£o n√£o est√° respondendo (HTTP $response)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erro ao testar aplica√ß√£o" -ForegroundColor Red
}
