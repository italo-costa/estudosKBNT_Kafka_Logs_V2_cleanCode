# Script para Configurar Port Forwarding Windows -> WSL2 para Postman

Write-Host "=== CONFIGURANDO ACESSO POSTMAN WINDOWS ===" -ForegroundColor Green

# 1. Obter IP do WSL2
Write-Host "1. Detectando IP do WSL2..." -ForegroundColor Yellow
$wslIP = wsl -e bash -c "ip addr show eth0 | grep 'inet ' | awk '{print `$2}' | cut -d'/' -f1"
Write-Host "IP WSL2: $wslIP" -ForegroundColor Cyan

# 2. Verificar se aplica√ß√£o est√° funcionando no WSL2
Write-Host "2. Verificando aplica√ß√£o no WSL2..." -ForegroundColor Yellow
$healthCheck = wsl -e bash -c "timeout 5 curl -s http://localhost:8084/actuator/health 2>/dev/null"
if ($healthCheck -match "UP") {
    Write-Host "‚úÖ Aplica√ß√£o funcionando no WSL2" -ForegroundColor Green
} else {
    Write-Host "‚ùå Aplica√ß√£o n√£o est√° respondendo no WSL2" -ForegroundColor Red
    Write-Host "Tentando reiniciar aplica√ß√£o..." -ForegroundColor Yellow
    wsl -e bash -c "docker restart virtual-stock-stable"
    Start-Sleep -Seconds 20
}

# 3. Limpar port forwarding anterior
Write-Host "3. Limpando configura√ß√µes anteriores..." -ForegroundColor Yellow
try {
    netsh interface portproxy delete v4tov4 listenport=8084 listenaddress=0.0.0.0 2>$null
    netsh interface portproxy delete v4tov4 listenport=8084 listenaddress=127.0.0.1 2>$null
    Write-Host "Port forwarding anterior removido" -ForegroundColor Gray
} catch {
    Write-Host "Nenhum port forwarding anterior encontrado" -ForegroundColor Gray
}

# 4. Configurar port forwarding Windows -> WSL2
Write-Host "4. Configurando port forwarding..." -ForegroundColor Yellow
try {
    # Port forwarding para localhost do Windows
    netsh interface portproxy add v4tov4 listenport=8084 listenaddress=0.0.0.0 connectport=8084 connectaddress=$wslIP
    Write-Host "‚úÖ Port forwarding configurado: Windows:8084 -> WSL2($wslIP):8084" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao configurar port forwarding (Execute como Administrador)" -ForegroundColor Red
    Write-Host "Tentando configura√ß√£o alternativa..." -ForegroundColor Yellow
}

# 5. Configurar firewall do Windows
Write-Host "5. Configurando firewall..." -ForegroundColor Yellow
try {
    netsh advfirewall firewall delete rule name="WSL2 Virtual Stock Service" 2>$null
    netsh advfirewall firewall add rule name="WSL2 Virtual Stock Service" dir=in action=allow protocol=TCP localport=8084
    Write-Host "‚úÖ Regra de firewall adicionada" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è N√£o foi poss√≠vel configurar firewall (pode precisar de permiss√µes de Admin)" -ForegroundColor Yellow
}

# 6. Mostrar configura√ß√µes
Write-Host "6. Verificando configura√ß√µes..." -ForegroundColor Yellow
try {
    $portForwardRules = netsh interface portproxy show v4tov4
    if ($portForwardRules -match "8084") {
        Write-Host "‚úÖ Port forwarding ativo:" -ForegroundColor Green
        netsh interface portproxy show v4tov4 | Select-String "8084"
    } else {
        Write-Host "‚ö†Ô∏è Port forwarding n√£o detectado" -ForegroundColor Yellow
    }
} catch {
    Write-Host "N√£o foi poss√≠vel verificar port forwarding" -ForegroundColor Gray
}

# 7. Testar conectividade do Windows
Write-Host "7. Testando conectividade do Windows..." -ForegroundColor Yellow

$testUrls = @(
    "http://localhost:8084/actuator/health",
    "http://127.0.0.1:8084/actuator/health"
)

foreach ($url in $testUrls) {
    Write-Host "Testando: $url" -ForegroundColor Cyan
    try {
        $response = Invoke-WebRequest -Uri $url -TimeoutSec 10 -UseBasicParsing
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ FUNCIONANDO!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Status: $($response.StatusCode)" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Falhou: $($_.Exception.Message)" -ForegroundColor Red
    }
}

Write-Host "`n=== CONFIGURA√á√ÉO PARA POSTMAN ===" -ForegroundColor Green
Write-Host "Use ESTES endpoints no Postman (Windows):" -ForegroundColor Yellow
Write-Host "‚úÖ Health: http://localhost:8084/actuator/health" -ForegroundColor Cyan
Write-Host "‚úÖ API: http://localhost:8084/api/v1/virtual-stock/stocks" -ForegroundColor Cyan
Write-Host "‚úÖ Ping: http://localhost:8084/ping" -ForegroundColor Cyan
Write-Host "‚úÖ Home: http://localhost:8084/" -ForegroundColor Cyan

Write-Host "`nüìã IMPORTANTE:" -ForegroundColor Yellow
Write-Host "- Use http://localhost:8084 (N√ÉO use o IP 172.30.221.62)" -ForegroundColor White
Write-Host "- Se n√£o funcionar, execute este script como Administrador" -ForegroundColor White
Write-Host "- Pode ser necess√°rio reiniciar o Postman ap√≥s a configura√ß√£o" -ForegroundColor White